          <!-- page content ends -->
        </div>
      </main>
    </div>
    
    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/lib/wow/wow.min.js"></script>
    <script src="/lib/easing/easing.min.js"></script>
  
  <!-- CKEditor 5 WYSIWYG Editor -->
  <script src="https://cdn.ckeditor.com/ckeditor5/40.0.0/classic/ckeditor.js"></script>
    
    <!-- Suppress noisy extension errors (e.g., MutationObserver observe target not a Node) to avoid breaking admin UX -->
    <script>
      window.addEventListener('unhandledrejection', function(e){
        try{
          var reason = e && e.reason ? (e.reason.message || String(e.reason)) : '';
          if(/Failed to execute 'observe' on 'MutationObserver'/.test(reason)){
            e.preventDefault();
          }
        }catch(_){ /* ignore */ }
      });
    </script>
    
    <!-- Initialize WOW.js for animations -->
    <script>
      new WOW().init();
      
      // Initialize CKEditor 5 for all textareas with class 'wysiwyg'
      (function(){
        var INIT_SELECTOR = 'textarea.wysiwyg';
        var editors = {};
        
        function initEditors(){
          if(!window.ClassicEditor) {
            console.warn('[CKEditor] not loaded yet, retrying...');
            return setTimeout(initEditors, 500);
          }
          
          var textareas = document.querySelectorAll(INIT_SELECTOR);
          if(!textareas.length) {
            console.log('[CKEditor] No textareas found with class "wysiwyg"');
            return;
          }
          
          console.log('[CKEditor] Initializing on', textareas.length, 'textarea(s)');
          
          textareas.forEach(function(textarea){
            // Skip if already initialized
            if(editors[textarea.id]) {
              return;
            }
            
            // Get textarea ID or create one
            var textareaId = textarea.id;
            if(!textareaId){
              textareaId = 'wysiwyg-' + Math.random().toString(36).substr(2, 9);
              textarea.id = textareaId;
            }
            
            // Hide original textarea
            textarea.style.display = 'none';
            
            // Create editor container
            var editorDiv = document.createElement('div');
            editorDiv.id = textareaId + '-editor';
            editorDiv.innerHTML = textarea.value || '';
            textarea.parentNode.insertBefore(editorDiv, textarea.nextSibling);
            
            // Initialize CKEditor
            ClassicEditor
              .create(editorDiv, {
                toolbar: {
                  items: [
                    'heading', '|',
                    'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',
                    'outdent', 'indent', '|',
                    'blockQuote', 'insertTable', '|',
                    'undo', 'redo', '|',
                    'sourceEditing'
                  ]
                },
                heading: {
                  options: [
                    { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                    { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                    { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                    { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' }
                  ]
                },
                table: {
                  contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells']
                }
              })
              .then(function(editor) {
                editors[textareaId] = editor;
                
                // Sync editor content to textarea
                editor.model.document.on('change:data', function() {
                  textarea.value = editor.getData();
                });
                
                // Sync on form submit
                var form = textarea.closest('form');
                if(form){
                  form.addEventListener('submit', function(){
                    textarea.value = editor.getData();
                  });
                }
              })
              .catch(function(error) {
                console.error('[CKEditor] Initialization error:', error);
              });
          });
        }
        
        function onReady(fn){
          if(document.readyState === 'loading'){
            document.addEventListener('DOMContentLoaded', fn, { once: true });
          } else {
            fn();
          }
        }
        
        onReady(initEditors);
        
        // Re-init when Bootstrap tabs are shown
        document.addEventListener('shown.bs.tab', function(){
          setTimeout(initEditors, 150);
        });
      })();
    </script>
    <script>
      // Hide sidebar on nav click or outside click (mobile)
      document.addEventListener('DOMContentLoaded', function() {
        var sidebar = document.querySelector('.admin-sidebar');
        var links = sidebar ? sidebar.querySelectorAll('.nav-link') : [];
        links.forEach(function(link) {
          link.addEventListener('click', function() {
            if(window.innerWidth < 992) document.body.classList.remove('admin-sidebar-open');
          });
        });
        document.addEventListener('click', function(e) {
          if(window.innerWidth < 992 && document.body.classList.contains('admin-sidebar-open')) {
            var sidebar = document.querySelector('.admin-sidebar');
            var toggle = document.querySelector('.admin-sidebar-toggle');
            if(sidebar && !sidebar.contains(e.target) && toggle && !toggle.contains(e.target)) {
              document.body.classList.remove('admin-sidebar-open');
            }
          }
        });
      });
    </script>
  </body>
</html>
